10    rem "Jr Tracker by econtreras"15    dim cpos(3):dim rpos(3):dim nname$(100):dim psg(84):buf=alloc(8)17    dim lb(6):dim hb(6):dim pn(6):curpat=0:mem=$22C00+512:tempo=12818    cursong=0:maxsongpat=0:edflag=0:ver$="Ver 1.5"20    cls :cursor on 25    memcopy $22C00,$4000 poke 0:rem "clear song memory"26    for c=0 to 7:xpoke($22C08+16*c,c):next :rem "initialize song pages"30    memcopy $7800,64 poke 0:rem "define sprite cursor"35    poke $D6A1,12:rem "Enable stereo output sid+psg"40    for c=0 to 350    for d=0 to 360    ?($7800+8*c+d)=20070    next 80    next 90    poke $D000,63+64:rem "Show sprite cursor"100   poke $D900,121:pokel $D901,$7800101   poke $D900+8,121:pokel $D901+8,$7800102   poke $D900+16,121:pokel $D901+16,$7800103   poke $D900+24,121:pokel $D901+24,$7800110   pokew $D904,48:pokew $D906,100111   pokew $D904+8,160:pokew $D906+8,100112   pokew $D904+16,232:pokew $D906+16,100113   pokew $D904+24,260:pokew $D906+24,76120   drawscreen():readnotes():addpattern(1):rem "showpattern(1)"125   xpoke($22C00,80):xpoke($22C01,83):xpoke($22C02,71):rem "PSG"126   xpoke($22C03,1):xpoke($22C05,32):rem "subversion, pattern size"130   p=0:rect 2,38 color 201 to 118,197140   while qflag=false 145   pflag=false :cflag=0150   k=inkey()160   if (k=46)^(k=9)165   p=(p+1)&3170   pflag=true :edflag=0180   endif 190   if (k=44)^(k=5)195   p=(p-1):if p=-1 then p=3200   pflag=true :edflag=0210   endif 220   if pflag=true 230   rect 2,38 color 100 to 118,197240   rect 126,38 color 100 to 190,197250   rect 198,38 color 100 to 218,197255   rect 226,38 color 100 to 300,66260   if p=0 then rect 2,38 color 201 to 118,197270   if p=1 then rect 126,38 color 201 to 190,197280   if p=2 then rect 198,38 color 201 to 218,197285   if p=3 then rect 226,38 color 201 to 300,66290   pflag=false :k=0300   endif 305   if (rhythm=0)310   if k=6 then cpos(p)=cpos(p)+1:if cpos(p)>6 then cpos(p)=0:cflag=1315   if k=2 then cpos(p)=cpos(p)-1:if cpos(p)=-1 then cpos(p)=6:cflag=1320   if k=14 then rpos(p)=rpos(p)+1:if rpos(p)>=32 then rpos(p)=0:cflag=1325   if k=16 then rpos(p)=rpos(p)-1:if rpos(p)=-1 then rpos(p)=31:cflag=1326   if p=1&cpos(p)>3 then cpos(p)=0330   endif 335   if p=0340   if ((k>=2)&(k<=16)&(note>0))345   printat(4+cpos(0)*4,rpos(0)+17,"...")350   endif 360   if rhythm=0 then pokew $D904,48+cpos(p)*16:pokew $D906,100+rpos(p)*4370   if cpos(0)<6380   if ((k>=97)&(k<=103))^((k>=65)&(k<=71))390   printat(4+cpos(0)*4,rpos(0)+17,"    ")395   if k>71 then k=k-32400   n$=chr$(k):printat(4+cpos(0)*4,rpos(0)+17,n$):note=1410   endif 420   if note=1430   if (k=42)^(k=35)435   if (n$<>"E")&(n$<>"B")440   printat(5+cpos(0)*4,rpos(0)+17,"#"):n$=n$+"#"445   endif 450   endif 460   if (k>=50)&(k<=55)465   printat(6+cpos(0)*4,rpos(0)+17,chr$(k)):n$=n$+chr$(k):note=0470   if len(n$)=2 then n$=left$(n$,1)+" "+right$(n$,1)472   a=mem+curpat*256+rpos(0)*8+cpos(0):rem "calculate mem position"474   d=1:while nname$(d)<>n$:d=d+1:wend :rem "find note"475   if d>=22476   xpoke(a,d):rem "store note"477   else :printat(6+cpos(0)*4,rpos(0)+17,"..."):note=0:endif 480   endif 490   endif 500   if k=8510   printat(4+cpos(0)*4,rpos(0)+17,"..."):note=0515   a=mem+curpat*256+rpos(0)*8+cpos(0)516   xpoke(a,0):rem "delete note"520   endif 525   if k=111530   printat(4+cpos(0)*4,rpos(0)+17,"OFF"):note=0535   a=mem+curpat*256+rpos(0)*8+cpos(0)540   xpoke(a,85)545   endif 550   if k=122555   printat(4+cpos(0)*4,rpos(0)+17,"EOP"):note=0560   a=mem+curpat*256+rpos(0)*8+cpos(0)565   xpoke(a,86)570   endif 575   if k=108580   a=mem+curpat*256+rpos(0)*8+cpos(0)585   xpeek(a)590   if peekvalue>0&peekvalue<85595   a$=chr$(asc(mid$(nname$(peekvalue),1,1))+32)600   a$=a$+mid$(nname$(peekvalue),2,2)605   d=peekvalue+128:xpoke(a,d)610   printat(4+cpos(0)*4,rpos(0)+17,a$)620   endif 630   endif 640   endif 650   if cpos(0)=6680   if ((k>47)&(k<51))690   n$=chr$(k)700   printat(28,rpos(0)+17,n$)720   a=mem+curpat*256+rpos(0)*8+cpos(0):d=128+val(n$):xpoke(a,d)730   endif 740   if k=8750   printat(28,rpos(0)+17,".")755   a=mem+curpat*256+rpos(0)*8+cpos(0)756   d=0:xpoke(a,d)760   endif 770   endif 780   endif 1000  if p=11010  pokew $D906+8,100+rpos(p)*4:poke $D904+8,160+(cpos(p)*16)1020  if k=131030  num=rpos(p)*4+cpos(p)1040  curpat=num:showpattern(num+1)1050  endif 1060  if k=1151070  num=rpos(p)*4+cpos(p):maxsongpat=maxsongpat+11080  a=$22C00+255+page*32+maxsongpat:xpoke(a,num+1)1090  a$=right$("00"+str$(num+1),3)1095  if maxsongpat\32>0 then page=page+1:maxsongpat=0:showpage(page)1100  songpat=maxsongpat%32:printat(50,16+songpat,a$)1110  endif 1150  if k=81160  printat(2,50,"Press y to clear selected pattern, other to cancel")1170  k=0:while k=0:k=inkey():wend 1180  if k=1211190  printat(2,50,spc(50))1195  printat(2,50,"Clearing data...")1200  curpat=rpos(p)*4+cpos(p)1210  for c=0 to 311220  for d=0 to 31230  a=mem+curpat*128+c*4+d1240  xpoke(a,0)1250  next 1260  next 1270  showpattern(curpat+1)1280  endif 1290  printat(2,50,spc(50))1300  endif 1310  if k=1141320  num=rpos(p)*4+cpos(p)1330  a=$22C00+255+page*32+rpos(2)+1:xpoke(a,num+1)1340  a$=right$("00"+str$(num+1),3)1350  printat(50,17+rpos(2),a$)1360  endif 1500  endif 1510  if p=21520  pokew $D906+16,100+rpos(p)*41530  if k=911540  page=(page-1):if page=-1 then page=71550  showpage(page)1560  endif 1570  if k=931580  page=(page+1)&71590  showpage(page)1600  endif 1610  if k=81620  printat(50,16+maxsongpat,"...")1630  maxsongpat=maxsongpat-11635  a=$22C00+255+page*32+maxsongpat:xpoke(a,0)1640  endif 1650  endif 1800  if p=31810  if rpos(p)>3 then rpos(p)=01820  if rpos(p)<0 then rpos(p)=31830  if cpos(p)>1 then cpos(p)=01840  if cpos(p)<0 then cpos(p)=1:pokew $D904+24,3241845  if edflag=01846  if cpos(p)=0:pokew $D904+24,260:else :pokew $D904+24,324:endif 1847  endif 1848  pokew $D906+24,76+rpos(p)*41850  if cpos(p)=01860  if k=131865  if edflag=01870  showsongseq(rpos(p)+1):cursong=rpos(p)1875  else 1880  edflag=0:pokew $D904+24,264:name$=""1885  printat(56,11+rpos(p)," ")1890  endif 1895  endif 1900  if edflag=1&k>31&k<123&len(name$)<141910  name$=name$+chr$(k):a=$22C08+16*rpos(p)+nc1920  xpoke(a,k)1930  printat(57,11+rpos(p),name$):nc=nc+11940  pokew $D904+24,260+len(name$)*4:k=01950  endif 1960  if k=81961  if edflag=01962  edflag=1:nc=2:name$="":printat(56,11+rpos(p),"*"+spc(15))1963  else 1964  if len(name$)>0 then name$=left$(name$,len(name$)-1):nc=nc-11965  printat(57,11+rpos(p),name$+" ")1966  pokew $D904+24,260+len(name$)*4:k=01967  endif 1968  endif 1970  endif 1980  if cpos(p)=11990  if k>47&k<562000  printat(73,11+rpos(p),chr$(k))2010  a=$22C08+16*rpos(p):page=val(chr$(k))2020  xpoke(a,page)2030  endif 2040  endif 2050  endif 2200  if edflag=02210  if k=131 then savefile()2220  if k=129 then loadfile()2230  if k=32 then playsong(cursong+1)2240  if k=135 then soundoff()2250  if k=112 then playpattern(curpat+1)2260  if (k=43^k=45)2270  if k=432280  curpat=curpat+1:showpattern(curpat+1)2290  if curpat>maxpat2300  maxpat=curpat:xpoke($22C06,maxpat)2310  addpattern(curpat+1)2320  endif 2330  endif 2340  if k=452350  if curpat>0 then curpat=curpat-1:showpattern(curpat+1)2360  endif 2370  cpos(1)=curpat%4:rpos(1)=curpat\42380  pokew $D904+8,160+cpos(1)*16:pokew $D906+8,100+rpos(1)*42390  endif 2400  if k=1162410  poke $D904,113:poke $D906,76:n$=""2420  printat(20,11,"..."):tempo=1282430  while k<>132440  k=inkey()2450  if k>=48&k<=57&len(n$)<32460  n$=n$+chr$(k)2470  printat(20,11,n$)2480  poke $D904,113+(4*len(n$))2490  endif 2500  wend 2510  if n$<>""2520  if (val(n$)>=0)&(val(n$)<=255)2530  tempo=val(n$)2540  a=$22C08+16*(cursong):xpoke(a+1,tempo)2550  endif 2560  endif 2570  a$=right$("00"+str$(tempo),3):printat(20,11,a$)2580  endif 2590  if k=1132600  bitmap clear 0:cls :sprites off :cursor on 2610  print "Thank you for using the JR Tracker!"2615  end 2620  endif 2630  endif 2640  wend 2999  end 3000  proc drawsong(num)3010  num=num-13020  songmem=$22C00+256+(num*32):print a3030  for c=0 to 313040  xpeek(songmem+c):b=peekvalue:a$=right$("00"+str$(b),3)3050  printat(43,17+c,a$)3060  next 3080  endproc 3100  proc savefile()3105  pokew $D906,64:pokew $D904,2843110  k=0:c=0:n$="":printat(63,8,"          ")3120  while k<>133130  k=inkey()3140  if (k<>0)&(k<>13)&c<163141  if k=83142  if len(n$)>0 then n$=left$(n$,len(n$)-1)3143  printat(63,8,n$+" ")3144  else 3150  a$=chr$(k):n$=n$+a$:c=c+13160  printat(63,8,n$)3162  endif 3165  pokew $D906,64:pokew $D904,284+4*len(n$)3170  endif 3180  wend 3190  a$=n$+".tr2":printat(2,50,"Saving "+a$)3200  bsave a$,$22C00,163843210  printat(2,50,spc(40))3220  endproc 3250  proc loadfile()3260  k=0:n$="":printat(63,8,"          ")3270  while k<>133275  pokew $D904,284+len(n$)*4:pokew $D906,643280  k=inkey()3290  if (k<>0)&(k<>13)&c<163291  if k=83292  if len(n$)>0 then n$=left$(n$,len(n$)-1)3293  printat(63,8,n$+" ")3294  else 3300  a$=chr$(k):n$=n$+a$3310  printat(63,8,n$)3315  endif 3320  endif 3330  wend 3340  a$=n$+".tr2":printat(2,50,"Loading "+a$)3350  try bload a$,$22C00 to ec3355  if ec=03360  printat(2,50,spc(40))3370  xpeek($22C06):cursong=peekvalue:rem "Patterns used"3380  for c=0 to peekvalue3390  a$=right$("00"+str$(c+1),3):printat(32+(c%4)*4,17+(c\4),a$)3400  next 3410  showtracks()3420  showsongseq(1)3425  showpattern(1)3430  else 3440  printat(2,50,spc(40))3450  printat(2,50,"File not found.. press a key to continue.")3460  k=0:while k=0:k=inkey():wend 3470  printat(2,50,spc(42))3480  endif 3485  pokew $D904,48:pokew $D906,100:cursong=03490  endproc 4000  proc drawscreen()4010  cls :bitmap on :bitmap clear 04020  printat(1,0,"JR TRACKER - a simple PSG Tracker by econtreras")4030  printat(1,4,"F1 Load Song")4040  printat(1,5,"F3 Save Song")4050  printat(1,6,"F7 Sound off")4060  printat(16,4,"P  Play Pattern")4070  printat(16,5,"+  Next Pattern")4080  printat(16,6,"-  Prev Pattern")4090  printat(33,4,"SPC Play Complete Song")4100  printat(33,5,"TAB Change Section")4105  printat(33,6,"Q   QUIT Tracker!")4110  printat(1,2,"GLOBAL")4120  printat(16,2,"PATTERN")4130  printat(33,2,"OTHER")4140  line 2,0 color 100 to 2,284150  line 60,7 to 60,284160  line 126,7 to 126,284170  line 226,0 to 226,284180  line 2,6 to 226,64190  line 2,13 to 226,134200  line 2,29 to 226,294210  printat(3,10,"   PATTERN      TEMPO")4220  printat(3,11,"     001         128 ")4225  printat(3,13," ----LEFT--- ---RIGHT---  ")4230  printat(1,15,"#  CH1 CH2 CH3 CH4 CH5 CH6 R")4240  for c=1 to 324250  a$=right$("0"+str$(c),2)+" ... ... ... ... ... ... .   ... ..."4255  a$=a$+" ... ...   ..."4260  printat(1,16+c,a$)4270  next 4280  rect 2,38 to 118,1974290  rect 2,50 to 118,66:rect 2,50 to 118,584300  line 14,50 to 14,197:line 30,66 to 30,1974310  line 46,66 to 46,197:line 62,38 to 62,1974320  line 78,66 to 78,197:line 94,66 to 94,1974330  line 110,50 to 110,1974340  printat(35,12,"PATTERNS")4350  printat(35,13,"  USED  ")4360  rect 126,38 to 190,197:rect 126,38 to 190,664370  printat(50,12,"SONG"):printat(50,13,"PAGE"):printat(50,15,"00")4380  rect 198,38 to 218,197:rect 198,38 to 218,664385  rect 226,38 to 300,664390  for c=0 to 16:printat(32,32+c,"--- --- --- ---"):next 4400  printat(57,8,"FILE: NEW")4410  printat(60,0,ver$)4420  endproc 5000  proc printat(x,y,a$)5010  ?1=2:rem "set I/O to text memory"5020  pos=$C000+(y*80)+x5030  for c=1 to len(a$):a=asc(mid$(a$,c,1)):?(pos+c-1)=a:next 5040  ?1=05050  endproc 5100  proc showpattern(num)5105  rem "Song Header is 256 bytes + 256 Bytes for Instrument Data"5110  a$=right$("00"+str$(num),3):printat(8,11,a$)5120  for y=0 to 315130  for x=0 to 65140  a=mem+(y*8)+x+(num-1)*256:xpeek(a):leg=05145  if x<65151  if peekvalue>=128 then leg=15152  b=peekvalue&127:a$=nname$(b)5153  if leg=15154  a$=chr$(asc(mid$(a$,1,1))+32)+mid$(a$,2,2)5155  endif 5175  else 5180  if peekvalue<>05185  a$=right$(str$(peekvalue&3),1)5190  else 5195  a$="."5197  endif 5200  endif 5210  printat(4+(x*4),y+17,a$)5220  next 5230  next 5240  endproc 5250  proc readnotes()5260  for c=1 to 1005270  read a$:nname$(c)=a$5280  next 5290  for c=1 to 845300  read a#:psg(c)=int(111552/a#):rem "114240,111563"5310  next 5320  nname$(0)="..."5330  endproc 5350  proc xpeek(addr)5360  local block:block=addr\8192:local prevblock5370  local offset:offset=addr%81925380  ?0=179:prevblock=?$E:?$E=block:?1=45390  peekvalue=?($C000+offset)5400  ?1=0:?$E=prevblock5410  endproc 5450  proc xpoke(addr,value)5460  local block:block=addr\8192:local prevblock5465  local offset:offset=addr%81925470  ?0=179:prevblock=?$E:?$E=block:?1=45480  ?($C000+offset)=value5490  ?1=0:?$E=prevblock5500  endproc 5510  proc addpattern(num)5520  if num<1225530  col=(num-1)%4:row=(num-1)\45540  a$=right$("00"+str$(num),3):printat(32+(col*4),17+row,a$)5545  printat(8,11,a$)5550  else 5560  printat(2,50,"Max number of patterns reached!")5570  k=0:while k=0:k=inkey:wend 5580  printat(2,50,"                             ")5585  maxpat=num-15590  endif 5595  endproc 5600  proc playpattern(num)5605  currow=0:eot=05610  while currow<=315615  a=mem+currow*8+(num-1)*256:rhythm=05616  memcopy a,8 to buf5620  for c=0 to 55625  b=peek(buf+c):leg=05630  if b>=128 then leg=1:b=b&1275635  if b=86 then currow=31:eot=15640  if b=85 then lb(c)=855645  if b=0 then lb(c)=-1:hb(c)=-15650  if (b>0)&(b<85) then lb(c)=psg(b)&15:hb(c)=(psg(b)&1008)\165655  if b=pn(c):rem "process pause on non legatto,same note"5660  if c=0 then poke $D610,159:rem "144+15=159"5661  if c=3 then poke $D600,1595665  if c=1 then poke $D610,191:rem "176+15=191"5666  if c=4 then poke $D600,1915670  if c=2 then poke $D610,223:rem "208+15=223"5671  if c=5 then poke $D600,2235675  endif 5680  if b=85 then lb(c)=855685  if (b>0)&(b<85) then pn(c)=b+128*leg5690  next 5695  xpeek(buf+6):b=peekvalue5700  if b>127 then lb(6)=b&3:hb(6)=0:rhythm=15705  if lb(0)=85 then poke $D610,159:goto 57155710  if lb(0)>-1 then poke $D610,148:poke $D610,128+lb(0):poke $D610,hb(0)5715  if lb(1)=85 then poke $D610,191:goto 57255720  if lb(1)>-1 then poke $D610,180:poke $D610,160+lb(1):poke $D610,hb(1)5725  if lb(2)=85 then poke $D610,223:goto 57355730  if lb(2)>-1 then poke $D610,212:poke $D610,192+lb(2):poke $D610,hb(2)5735  if lb(3)=85 then poke $D600,159:goto 57455740  if lb(3)>-1 then poke $D600,148:poke $D600,128+lb(3):poke $D600,hb(3)5745  if lb(4)=85 then poke $D600,191:goto 57555750  if lb(4)>-1 then poke $D600,180:poke $D600,160+lb(4):poke $D600,hb(4)5755  if lb(5)=85 then poke $D600,223:goto 57655760  if lb(5)>-1 then poke $D600,212:poke $D600,192+lb(5):poke $D600,hb(5)5765  for d=1 to 64:next 5770  if rhythm=15775  poke $D600,240:poke $D600,228+lb(6)5780  if lb(6)=0 then poke $D600,2405785  else 5790  poke $D600,240+155795  endif 5800  poke $D906,100+(currow*4):poke $D904,485805  if eot=05810  while event(ev,10-tempo\25)<>-1:wend 5830  endif 5835  rhythm=0:currow=currow+15840  wend 5850  endproc 5900  proc playsong(num)5910  num=num-1:xpeek($22C08+16*num):page=peekvalue5915  sngmem=$22C00+255+32*page:pattern=1:sngrow=15920  while pattern<>o5930  xpeek(sngmem+sngrow):pattern=peekvalue5935  a$=str$(peekvalue):rem "printat(1,59,a$)"5940  if pattern<>0 then poke $D906+16,100+((sngrow-1)&31)*45945  if pattern<>0 then playpattern(pattern)5950  sngrow=sngrow+15960  wend 5970  endproc 6000  proc soundoff()6010  poke $D600,144+15:poke $D600,176+156015  poke $D610,144+15:poke $D610,176+156020  poke $D600,208+15:poke $D600,240+156025  poke $D610,208+15:poke $D610,240+156030  endproc 6500  proc showsongseq(num)6510  a=$22C08+16*(num-1):eflg=06520  xpeek(a):page=peekvalue6530  xpeek(a+1):tempo=peekvalue6550  a$=right$("00"+str$(tempo),3)6560  printat(20,11,a$):sngmem=$22C00+256+32*(page)6570  showpage(page)6580  endproc 6650  proc showtracks()6660  sngmem=$22C08:xpeek($22C07):maxsng=peekvalue6670  for cursng=1 to 46680  n$="":xpeek(sngmem+(cursng-1)*16):page=peekvalue6690  for d=2 to 156700  xpeek(sngmem+((cursng-1)*16)+d):n$=n$+chr$(peekvalue)6710  next 6720  printat(57,10+cursng,n$):a$=str$(page):printat(73,10+cursng,a$)6730  next 6740  endproc 7000  proc showpage(page)7010  sngmem=$22C00+256+32*(page):eflg=07020  for sngrow=0 to 317030  xpeek(sngmem+sngrow)7040  a$=right$("00"+str$(peekvalue),3)7050  if peekvalue=07060  if eflg=07070  if sngrow>0 then maxsongpat=sngrow7080  if sngrow=0 then maxsongpat=07090  endif 7100  eflg=17110  a$="..."7120  endif 7130  printat(50,17+sngrow,a$)7140  next 7150  a$=right$("00"+str$(page),2):printat(50,15,a$)7160  endproc 10000 rem "NOTE & COMMAND DATA"10010 data "C 1","C#1","D 1","D#1","E 1"10015 data "F 1","F#1","G 1","G#1","A 1","A#1","B 1"10020 data "C 2","C#2","D 2","D#2","E 2"10025 data "F 2","F#2","G 2","G#2","A 2","A#2","B 2"10030 data "C 3","C#3","D 3","D#3","E 3"10035 data "F 3","F#3","G 3","G#3","A 3","A#3","B 3"10040 data "C 4","C#4","D 4","D#4","E 4"10045 data "F 4","F#4","G 4","G#4","A 4","A#4","B 4"10050 data "C 5","C#5","D 5","D#5","E 5"10055 data "F 5","F#5","G 5","G#5","A 5","A#5","B 5"10060 data "C 6","C#6","D 6","D#6","E 6"10065 data "F 6","F#6","G 6","G#6","A 6","A#6","B 6"10070 data "C 7","C#7","D 7","D#7","E 7"10075 data "F 7","F#7","G 7","G#7","A 7","A#7","B 7"10080 data "OFF","EOP","V02","V03","V04","V05","V06"10085 data "V07","V08","V09","V10","V11"10090 data "V12","V13","V14","V15"10140 rem "NOTE FREQUENCY"10150 data 32.70,34.65,36.71,38.89,41.20,43.6510160 data 46.25,49.00,51.91,55.00,58.27,61.7410170 data 65.41,69.30,73.42,77.78,82.41,87.3110180 data 92.50,98.00,103.83,110.00,116.54,123.4710190 data 130.81,138.59,146.83,155.56,164.81,174.6110200 data 185.00,196.00,207.65,220.00,233.08,246.9410210 data 261.63,277.18,293.66,311.13,329.63,349.2310220 data 369.99,392.00,415.30,440.00,466.16,493.8810230 data 523.25,554.37,587.33,622.25,659.25,698.4610240 data 739.99,783.99,830.61,880.00,932.33,987.7710250 data 1046.50,1108.73,1174.66,1244.51,1318.51,1396.9110260 data 1479.98,1567.98,1661.22,1760.00,1864.66,1975.5310270 data 2093.00,2217.46,2349.32,2489.02,2637.02,2793.8310280 data 2959.96,3135.96,3322.44,3520.00,3729.31,3951.07